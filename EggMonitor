#!/bin/bash

# Allow for debugging on a real computer
if ! which gpio > /dev/null; then
    DEBUG=true
    export _GPIO="echo gpio"
else
    export _GPIO=gpio
fi

MOTOR_PINS=(12 18)
DHT_PIN=14
POSITION=0

function init {
    for pin in ${MOTOR_PINS[@]}; do
        $_GPIO -g mode $pin pwm
    done
    $_GPIO pwm-ms
    $_GPIO pwmc 192
    $_GPIO pwmr 2000
}

# setMotorSpeed <-100..100>
function setMotorSpeed {
    [ -z "$DEBUG" ] || echo "Set Motor Speed to $1" >&2
    for pin in ${MOTOR_PINS[@]}; do
        ./setMotor $pin $@
    done
}

# moveDistance <distance in seconds> [speed]
function moveDistance {
    if ! [ -z "$1" ]; then
        local direction=+
        if ! [ -z "${1//[^-]/}" ]; then
            direction=-
        fi
        local distance=${1//[^0-9]/}
        local speed="${direction}${2:-50}" # speed=[+-]50
        [ -z "$DEBUG" ] || echo "Moving $1 distance" >&2
        setMotorSpeed $speed
        sleep $distance
        setMotorSpeed 0
        ((POSITION+=distance))
    fi
}

# readTemperature
function readTemperature {
    if which gpio > /dev/null; then     #if is computer?
        AdafruitDHT 11 $DHT_PIN | sed 's/\ .*//;s/.*\=//'
    else                                #else spit out random data
        echo $((15+RANDOM%10))
    fi
}

init

while true; do 
    TEMP=$(readTemperature)
    TEMP=${TEMP//[^0-9-]/}
    echo Temperature=$TEMP $(date +%s)       # Log Data
    [ -z "$DEBUG" ] || echo Temperature=$TEMP Position=$POSITION
    if (($TEMP-0>25)) && ((POSITION>=0)); then   #if temperature is greater than 80F
        moveDistance -1     # then retreat
    elif (($TEMP-0<20)) && ((POSITION<=-1)); then
        moveDistance 1
    fi
    sleep 5
done
